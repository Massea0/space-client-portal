// Test d'authentification pour diagnostic paiement
// √Ä ex√©cuter dans la console du navigateur quand connect√© √† l'app

async function testAuthentication() {
  console.log('üîç Test d\'authentification...');
  
  // V√©rifier la session Supabase
  const { data: session, error: sessionError } = await window.supabase.auth.getSession();
  console.log('Session Supabase:', { session: !!session?.session, error: sessionError });
  
  if (session?.session) {
    console.log('‚úÖ Utilisateur connect√©:', session.session.user.email);
    console.log('üîë Token JWT:', session.session.access_token.substring(0, 50) + '...');
    
    // Test direct de l'Edge Function avec le token
    try {
      const response = await fetch('https://qlqgyrfqiflnqknbtycw.supabase.co/functions/v1/initiate-payment', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${session.session.access_token}`
        },
        body: JSON.stringify({
          invoice_id: 'test-invoice-id',
          payment_method: 'wave',
          phone_number: '221777777777'
        })
      });
      
      console.log('üì° Statut r√©ponse:', response.status);
      
      const responseText = await response.text();
      console.log('üì• R√©ponse brute:', responseText);
      
      if (response.status === 400) {
        console.error('‚ùå Erreur 400 confirm√©e. Contenu:', responseText);
      }
      
    } catch (error) {
      console.error('‚ùå Erreur lors du test:', error);
    }
  } else {
    console.error('‚ùå Aucune session utilisateur trouv√©e');
  }
}

// Ex√©cuter le test
testAuthentication();
