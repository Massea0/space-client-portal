#!/bin/bash

# Script de d√©ploiement FTP vers Hostinger
# D√©ploie l'application React build√©e vers le serveur de production

# Configuration FTP
FTP_HOST="82.25.113.114"
FTP_USER="u766960269"
FTP_PASS="Masse_a003"
FTP_DIR="/domains/arcadis.tech/public_html/myspace"
LOCAL_BUILD_DIR="./dist"

# Couleurs pour les logs
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${GREEN}üöÄ D√©ploiement vers Hostinger - MySpace Production${NC}"
echo "========================================================="

# V√©rification des pr√©requis
echo -e "${YELLOW}üìã V√©rification des pr√©requis...${NC}"

# V√©rifier si le dossier build existe
if [ ! -d "$LOCAL_BUILD_DIR" ]; then
    echo -e "${RED}‚ùå Erreur: Le dossier $LOCAL_BUILD_DIR n'existe pas${NC}"
    echo -e "${YELLOW}üí° Ex√©cutez d'abord: npm run build${NC}"
    exit 1
fi

# V√©rifier si lftp est install√©
if ! command -v lftp &> /dev/null; then
    echo -e "${RED}‚ùå Erreur: lftp n'est pas install√©${NC}"
    echo -e "${YELLOW}üí° Installation automatique...${NC}"
    
    # Installer lftp automatiquement selon l'OS
    if [[ "$OSTYPE" == "darwin"* ]]; then
        # macOS - installer avec brew sans update automatique
        echo "Installation de lftp avec Homebrew..."
        HOMEBREW_NO_AUTO_UPDATE=1 brew install lftp
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        # Linux - installer avec apt
        echo "Installation de lftp avec apt..."
        sudo apt-get update && sudo apt-get install -y lftp
    else
        echo -e "${RED}‚ùå OS non support√© pour l'installation automatique${NC}"
        echo -e "${YELLOW}üí° Installation manuelle:${NC}"
        echo "  macOS: HOMEBREW_NO_AUTO_UPDATE=1 brew install lftp"
        echo "  Ubuntu: sudo apt-get install lftp"
        exit 1
    fi
    
    # V√©rifier que l'installation a r√©ussi
    if ! command -v lftp &> /dev/null; then
        echo -e "${RED}‚ùå √âchec de l'installation automatique${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ lftp install√© avec succ√®s${NC}"
fi

echo -e "${GREEN}‚úÖ Pr√©requis valid√©s${NC}"

# Affichage des informations de d√©ploiement
echo -e "${YELLOW}üìä Informations de d√©ploiement:${NC}"
echo "  Serveur: $FTP_HOST"
echo "  Utilisateur: $FTP_USER"
echo "  Destination: $FTP_DIR"
echo "  Source locale: $LOCAL_BUILD_DIR"
echo ""

# Confirmation avant d√©ploiement
read -p "ü§î Continuer le d√©ploiement? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${YELLOW}‚èπÔ∏è D√©ploiement annul√©${NC}"
    exit 0
fi

echo -e "${YELLOW}üì§ D√©marrage du t√©l√©chargement...${NC}"

# Script LFTP pour le d√©ploiement
lftp -c "
set ftp:ssl-allow no
set ftp:passive-mode on
set net:timeout 10
set net:max-retries 3
set net:reconnect-interval-base 5

open ftp://$FTP_USER:$FTP_PASS@$FTP_HOST

# Aller dans le r√©pertoire de destination
cd $FTP_DIR

# Sauvegarder l'ancien d√©ploiement (optionnel)
!echo 'Sauvegarde de l'ancien d√©ploiement...'
mkdir -p backup-\$(date +%Y%m%d-%H%M%S) 2>/dev/null || true

# Supprimer les anciens fichiers (sauf backup)
!echo 'Nettoyage des anciens fichiers...'
rm -rf assets/ *.html *.js *.css *.ico *.txt *.svg *.png *.json _redirects .htaccess 2>/dev/null || true

# T√©l√©charger tous les nouveaux fichiers
!echo 'T√©l√©chargement des nouveaux fichiers...'
lcd $LOCAL_BUILD_DIR
mirror --reverse --delete --verbose --exclude-glob backup-* ./ ./

# V√©rifier que les fichiers principaux sont pr√©sents
ls -la

quit
"

# V√©rification du statut de d√©ploiement
if [ $? -eq 0 ]; then
    echo ""
    echo -e "${GREEN}‚úÖ D√©ploiement r√©ussi!${NC}"
    echo -e "${GREEN}üåê Site accessible √†: https://myspace.arcadis.tech${NC}"
    echo -e "${GREEN}üí∞ Pages de paiement:${NC}"
    echo -e "   ‚Ä¢ https://myspace.arcadis.tech/payment/success"
    echo -e "   ‚Ä¢ https://myspace.arcadis.tech/payment/cancel"
    echo ""
    echo -e "${YELLOW}üìù Notes importantes:${NC}"
    echo -e "   ‚Ä¢ Les redirections SPA sont configur√©es (_redirects et .htaccess)"
    echo -e "   ‚Ä¢ Testez les URLs de paiement Wave apr√®s d√©ploiement"
    echo -e "   ‚Ä¢ V√©rifiez les logs Supabase pour diagnostiquer les probl√®mes"
else
    echo ""
    echo -e "${RED}‚ùå Erreur lors du d√©ploiement${NC}"
    echo -e "${YELLOW}üí° V√©rifiez:${NC}"
    echo -e "   ‚Ä¢ La connexion internet"
    echo -e "   ‚Ä¢ Les identifiants FTP"
    echo -e "   ‚Ä¢ Les permissions sur le serveur"
    exit 1
fi
